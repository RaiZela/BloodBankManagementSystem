@page "/donors"
@using BloodBankManagementSystem.BLL.Services.Donation
@using General
@using Microsoft.AspNetCore.Authorization
@using Shared.ViewModels
@rendermode InteractiveServer
@attribute [Authorize]

<MudTable Items="DonorsList" RowsPerPage="10" Hover="true" Striped="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Donors</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Gender</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>City</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.FirstName @context.LastName</MudTd>
        <MudTd>@context.Gender</MudTd>
        <MudTd>@context.Email</MudTd>
        <MudTd>@context.City.Description</MudTd>
        <MudTd>
            <MudButton Size="Size.Small" OnClick="@(() => OpenDialog(context.ID))" Color="Color.Default">View Details</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@if (SelectedDonor != null)
{
    <MudDialog @ref="dialogRef" MaxWidth="MaxWidth.Large" Visible="@dialogVisible">
        <TitleContent>
            <MudText Typo="Typo.h5">Donor Information: @SelectedDonor.FirstName @SelectedDonor.LastName</MudText>
        </TitleContent>
        <DialogContent>
            <MudExpansionPanels>

                <!-- Donations Section -->
                <MudExpansionPanel Text="Donations">
                    <MudTable Items="SelectedDonor.Donations" Striped="true" Hover="true">
                        <HeaderContent>
                            <MudTh>Date</MudTh>
                            <MudTh>Status</MudTh>
                            <MudTh>Actions</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.CreatedDate</MudTd>
                            <MudTd>@context.DonationStatus</MudTd>

                        </RowTemplate>
                    </MudTable>
                </MudExpansionPanel>

                <!-- Examinations Section -->
                <MudExpansionPanel Text="Examinations">
                    <MudExpansionPanels>
                        @if (GroupedExaminations != null)
                        {
                            @foreach (var group in GroupedExaminations)
                            {
                                <!-- Create an expansion panel for each date group -->
                                <MudExpansionPanel Text="@group.Key.ToString("dd-MM-yyyy")" Expanded="false">
                                    <MudTable Items="group.ToList()" Striped="true" Hover="true">
                                        <HeaderContent>
                                            <MudTh>Other Info</MudTh>
                                            <MudTh>Examination Result</MudTh>
                                        </HeaderContent>
                                        <RowTemplate>
                                            <MudTd>@context.Examination.Description</MudTd>
                                            <MudTd>@context.ResultValue</MudTd>
                                        </RowTemplate>
                                    </MudTable>
                                </MudExpansionPanel>
                            }
                        }
                    </MudExpansionPanels>
                </MudExpansionPanel>


                <!-- Questionnaire Section -->
                <MudExpansionPanel Text="Questionnaire Responses">
                    <MudExpansionPanels>
                        @if (GroupedQuestions != null)
                        {
                            @foreach (var group in GroupedQuestions)
                            {
                                <!-- Create an expansion panel for each date group -->
                                <MudExpansionPanel Text="@group.Key.ToString("dd-MM-yyyy")" Expanded="false">
                                    <MudTable Items="group.ToList()" Striped="true" Hover="true">
                                        <HeaderContent>
                                            <MudTh>Question</MudTh>
                                            <MudTh>Response</MudTh>
                                        </HeaderContent>
                                        <RowTemplate>
                                            <MudTd>@(context.Question.Text ?? string.Empty)</MudTd>
                                            <MudTd>@(context.Value ?? string.Empty)</MudTd>
                                            @* <MudTd>@(context.Answer.AnswerText ?? string.Empty)</MudTd> *@
                                        </RowTemplate>
                                    </MudTable>
                                </MudExpansionPanel>
                            }
                        }
                    </MudExpansionPanels>
                </MudExpansionPanel>

                <!-- Suspension History Section -->
                <MudExpansionPanel Text="Suspension History">
                    <MudTable Items="SelectedDonor.SuspendedDonors" Striped="true" Hover="true">
                        <HeaderContent>
                            <MudTh>Reason</MudTh>
                            <MudTh>Duration</MudTh>
                            <MudTh>Type</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Reason.Description</MudTd>
                            <MudTd>@context.Reason.Duration</MudTd>
                            <MudTd>@((context.Reason.Type).GetDisplayName())</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudExpansionPanel>

            </MudExpansionPanels>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
        </DialogActions>
    </MudDialog>

}



@code {
    private List<FullDonorViewModel> DonorsList = new();
    private FullDonorViewModel SelectedDonor;
    [Inject] private IDonorService DonorService { get; set; }
    private MudDialog dialogRef;
    bool dialogVisible = false;

    protected override async Task OnInitializedAsync()
    {
        var result = await DonorService.GetDonorsWithDetailsAsync();
        DonorsList = result;
    }

    private IEnumerable<IGrouping<DateTime, ExaminationResultViewModel>> GroupedExaminations;
    private IEnumerable<IGrouping<DateTime, ResponseViewModel>> GroupedQuestions;

    private async Task OpenDialog(int donorID)
    {
        SelectedDonor = DonorsList.FirstOrDefault(d => d.ID == donorID) ?? new FullDonorViewModel();
        GroupedExaminations = SelectedDonor.ExaminationResults
          .GroupBy(exam => exam.CreatedDate.Date);
        GroupedQuestions = SelectedDonor.QuestionaireResponses.GroupBy(exam => exam.CreatedDate.Date);
        dialogVisible = true;
    }


    private void CloseDialog()
    {
        dialogVisible = false;
    }

}